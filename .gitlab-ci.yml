image: openjdk:8-jdk

variables:
  ANDROID_TARGET_SDK: "24"
  ANDROID_BUILD_TOOLS: "24.0.0"
  ANDROID_SDK_TOOLS: "24.4.1"

stages:
  - sanitychecks
  - build
  - test

cache:
  paths:
  - tmp/.gradle/wrapper
  - tmp/.gradle/caches

before_script:
  - apt-get --quiet update --yes
  - echo "echo Setting up Android SDK" > sc_setup_android_sdk.sh
  - echo apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1 >> sc_setup_android_sdk.sh
  - echo wget --quiet --output-document=android-sdk.tgz https://dl.google.com/android/android-sdk_r${ANDROID_SDK_TOOLS}-linux.tgz >> sc_setup_android_sdk.sh
  - echo tar --extract --gzip --file=android-sdk.tgz >> sc_setup_android_sdk.sh
  - echo mkdir -p tmp >> sc_setup_android_sdk.sh
  - echo rm -rf tmp/android-sdk-linux >> sc_setup_android_sdk.sh
  - echo mv android-sdk-linux tmp/ >> sc_setup_android_sdk.sh
  - echo export ANDROID_HOME=$PWD/tmp/android-sdk-linux >> sc_setup_android_sdk.sh
  - echo "echo y | tmp/android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter android-${ANDROID_TARGET_SDK},platform-tools,build-tools-${ANDROID_BUILD_TOOLS},extra-android-m2repository" >> sc_setup_android_sdk.sh
  - echo "echo Finished setting up Android SDK" >> sc_setup_android_sdk.sh
  - chmod +x ./sc_setup_android_sdk.sh
  - cat ./sc_setup_android_sdk.sh
  - export GRADLE_USER_HOME=`pwd`/tmp/.gradle
  - chmod +x ./gradlew

licensecheck:
  script:
    - apt-get --quiet install --yes licensecheck
    - ./licensecheck.sh
  stage: sanitychecks

validateI18N:
  script:
    - ./validateI18N.sh
  stage: sanitychecks

build_debug:
  script:
    - . ./sc_setup_android_sdk.sh
    - ./gradlew assembleDebug
  stage: build
  artifacts:
    paths:
    - android/build/outputs/

build_release:
  script:
    - . ./sc_setup_android_sdk.sh
    - ./gradlew assembleRelease
  stage: build
  artifacts:
    paths:
    - android/build/outputs/

build_desktop:
  script:
    - ./gradlew desktop:dist
  stage: build
  artifacts:
    paths:
    - desktop/build/libs/

unit_tests:
  script:
    - . ./sc_setup_android_sdk.sh
    - ./gradlew tests:test --info
  stage: test
  artifacts:
    paths:
    - tests/build/reports/

fdroid_build:
  script:
    - . ./sc_setup_android_sdk.sh
    - wget https://services.gradle.org/distributions/gradle-2.2-bin.zip
    - mkdir /opt/gradle
    - unzip -d /opt/gradle gradle-2.2-bin.zip
    - export PATH=$PATH:/opt/gradle/gradle-2.2/bin
    - gradle -v
    - apt-get --quiet install --yes fdroidserver
    - git clone https://gitlab.com/fdroid/fdroidserver.git
    - git clone https://gitlab.com/fdroid/fdroiddata.git -b master --single-branch
    - git show -s --pretty=%d HEAD
    - CB=`git show -s --pretty=%d HEAD | egrep -o '/.*)'| egrep -o '[a-zA-Z0-9_-]*' | head -n1`
    - cd fdroiddata
    - sed -i "s/commit=.*/commit=$CB/g" metadata/com.gitlab.ardash.appleflinger.android.txt
    - grep commit metadata/com.gitlab.ardash.appleflinger.android.txt
    - cp ../fdroidserver/examples/config.py ./
    - chmod 0600 config.py
    - echo 'sdk_path = "$PWD/../tmp/android-sdk-linux"' >> config.py
#   - fdroid lint com.gitlab.ardash.appleflinger.android
    - ../fdroidserver/fdroid build -v -l -t com.gitlab.ardash.appleflinger.android &> build.log
    - cat build.log
    - bash -c "exit `grep 'BUILD FAILED' build.log | wc -l`"
  stage: test

