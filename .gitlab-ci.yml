image: openjdk:11-jdk

stages:
  - sanitychecks
  - build
  - test

variables:
  # ANDROID_COMPILE_SDK is the version of Android you're compiling with.
  # It should match compileSdkVersion.
  ANDROID_COMPILE_SDK: "30"

  # ANDROID_BUILD_TOOLS is the version of the Android build tools you are using.
  # It should match buildToolsVersion.
  ANDROID_BUILD_TOOLS: "30.0.2"

  # It's what version of the command line tools we're going to download from the official site.
  # Official Site-> https://developer.android.com/studio/index.html
  # There, look down below at the cli tools only, sdk tools package is of format:
  #        commandlinetools-os_type-ANDROID_SDK_TOOLS_latest.zip
  # when the script was last modified for latest compileSdkVersion, it was which is written down below
  ANDROID_SDK_TOOLS: "9477386"

cache:
  paths:
  - tmp/.gradle/wrapper
  - tmp/.gradle/caches

before_script:
  - apt-get --quiet update --yes
  - export GRADLE_USER_HOME=`pwd`/tmp/.gradle
  - chmod +x ./gradlew

licensecheck:
  script:
    - apt-get --quiet install --yes licensecheck
    - ./licensecheck.sh
  stage: sanitychecks

validateI18N:
  script:
    - apt-get --quiet install --yes fonttools
    - ./validateI18N.sh
  stage: sanitychecks

validate_images:
  script:
    - apt-get --quiet install --yes imagemagick
    - ./scripts/validate-images.sh
  stage: sanitychecks

# build_debug:
#   script:
#     - . ./scripts/setup-android-sdk.sh
#     - ./gradlew assembleDebug
#   stage: build
#   artifacts:
#     paths:
#     - android/build/outputs/

build_release:
  before_script:
    # Setup path gradle
    - export GRADLE_USER_HOME=$(pwd)/.gradle

    # Setup path as android_home for moving/exporting the downloaded sdk into it
    - export ANDROID_HOME="${PWD}/android-home"

    # Create a new directory at specified location
    - install -d $ANDROID_HOME

    # Not necessary, but just for surety
    - chmod +x ./setup_cmdline_tools.sh

    # Download cmdline-tools
    - sh ./setup_cmdline_tools.sh

    # Setup path cmdline-tools
    - export PATH=$PATH:${ANDROID_HOME}/cmdline-tools/cmdline-tools/bin/

    # Not necessary, but just for surety
    - chmod +x ./gradlew

    # - echo $LOCAL_PROPERTIES > ./local.properties
    # - echo $GOOGLE_SERVICES_JSON > ./app/google-services.json
    # - echo $KEYSTORE_FILE | base64 -d > my.keystore

  script:
    # - . ./scripts/setup-android-sdk.sh
    - ./gradlew assembleRelease
    - ./gradlew assembleDebug
  stage: build
  artifacts:
    paths:
    - android/build/outputs/

build_desktop:
  script:
    - ./gradlew desktop:dist
  stage: build
  artifacts:
    paths:
    - desktop/build/libs/

unit_tests:
  script:
    - echo skipped
    # - . ./scripts/setup-android-sdk.sh
    # - ./gradlew tests:test --info
  stage: test
  artifacts:
    paths:
    - tests/build/reports/

# fdroid_build:
#   script:
#     - . ./scripts/setup-android-sdk.sh
#     - wget https://services.gradle.org/distributions/gradle-3.3-bin.zip
#     - mkdir /opt/gradle
#     - unzip -d /opt/gradle gradle-3.3-bin.zip
#     - export PATH=$PATH:/opt/gradle/gradle-3.3/bin
#     - gradle -v
#     - apt-get --quiet install --yes fdroidserver
#     - git clone https://gitlab.com/fdroid/fdroidserver.git
#     - git clone https://gitlab.com/fdroid/fdroiddata.git -b master --single-branch
#     - git show -s --pretty=%d HEAD
#     - CB=`git show -s --pretty=%d HEAD | egrep -o '/.*)'| egrep -o '[a-zA-Z0-9_-]*' | head -n1`
#     - cd fdroiddata
#     - sed -i "s/commit=.*/commit=$CB/g" metadata/com.gitlab.ardash.appleflinger.android.yml
#     - grep commit metadata/com.gitlab.ardash.appleflinger.android.yml
#     - cp ../fdroidserver/examples/config.py ./
#     - chmod 0600 config.py
#     - echo 'sdk_path = "$PWD/../tmp/android-sdk-linux"' >> config.py
# #   - fdroid lint com.gitlab.ardash.appleflinger.android
#     - ../fdroidserver/fdroid build -v -l -t com.gitlab.ardash.appleflinger.android &> build.log
#     - cat build.log
#     - bash -c "exit `grep 'BUILD FAILED' build.log | wc -l`"
#   stage: test
#   artifacts:
#     paths:
#     - fdroiddata/build/com.gitlab.ardash.appleflinger.android/android/build/outputs/apk/android-release-unsigned.apk
#   except:
#     - google-play


